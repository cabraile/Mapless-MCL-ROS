<launch>

    <!-- PARAMETERS -->
    <!-- =================== -->

    <arg name="enable_viz"      value="true"/>
    <arg name="dataset_dir"     value="/home/braile/Workspace/phd/datasets/carina/bag"/>
    <arg name="map_path"        value="/home/braile/Workspace/phd/datasets/carina/sao_carlos_remake/roadmap.geojson"/>
    <arg name="trajectory_path" value="/home/braile/Workspace/phd/datasets/carina/sao_carlos_remake/virtual_trajectories/1/virtual_trajectory.geojson"/>
    <arg name="frame"           value="base_link"/>
    <arg name="n_particles"     value="100"/>

    <!-- DRIVERS -->
    <!-- =================== -->
    <param name="/use_sim_time" value="true" />
    <arg name="odom_topic"  value="/stereo/odometry"/>
    <arg name="imu_topic" value="/mti/sensor/imu"/>
    <arg name="camera_type" value="narrow"/>
    <node type="run_bags.py" name="run_bags" pkg="mapless_mcl_ros_demos" args="--pause --dataset_dir $(arg dataset_dir)" output="screen"/>

    <!-- GPS -->
    <node type="carina_demo_gps_fixer.py" name="gps_fixer" pkg="mapless_mcl_ros_demos"/>
    <node type="navsat_fix_to_map_odometry.py" name="gps_to_odometry" pkg="mapless_mcl_ros_demos">
        <remap from="/navsat/fix" to="/carina/driver/septentrio/fix_corrected"/>
        <param name="trajectory_path" value="$(arg trajectory_path)"/>
    </node>

    <!-- Transforms -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_imu"             args="0 0 0 0 0 0 1 base_link imu" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_gps"             args="0.19 0.0 0.65 0 0 0 base_link gps" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_velodyne"        args="0.98 0.0 1.057 3.1005 0 0 base_link velodyne" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_bumblebee"          args="0.98 0.0 0.87 -1.57 0.0 -1.57 base_link bumblebee" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_base_footprint"  args="0 0 -1 0 0 0 1 base_link base_footprint" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="bumbleblee_to_stereo"         args="0 0  0 0 0 0 1 bumblebee stereo" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="imu_to_xsens"                 args="0 0 0 0 0 0 1 imu xsens" />

    <!-- Stereo camera drivers -->
    <include file="$(find split_rectify_stereo)/launch/SplitRectify.launch" pass_all_args="true"/>
    <node name="stereo_pointcloud" pkg="stereo_image_proc" type="stereo_image_proc" >
        <remap from="left/image_raw"    to="/carina/driver/stereo/$(arg camera_type)/left/raw"/>
        <remap from="left/camera_info"  to="/carina/driver/stereo/$(arg camera_type)/left/camera_info"/>
        <remap from="right/image_raw"   to="/carina/driver/stereo/$(arg camera_type)/right/raw"/>
        <remap from="right/camera_info" to="/carina/driver/stereo/$(arg camera_type)/right/camera_info"/>
        <param name="prefilter_size" value="9"/>
        <param name="prefilter_cap" value="31"/>
        <param name="correlation_window_size" value="31"/>
        <param name="min_disparity" value="0"/>
        <param name="disparity_range" value="8"/>
        <param name="specke_size" value="100"/>
    </node>
    
    <!-- PERCEPTION -->
    <!-- =================== -->
    <node pkg="rtabmap_ros" type="stereo_odometry" name="stereo_odometry" clear_params="true" args="" launch-prefix="">
        <remap from="left/image_rect"        to="/carina/driver/stereo/$(arg camera_type)/left/raw"/>
        <remap from="left/camera_info"       to="/carina/driver/stereo/$(arg camera_type)/left/camera_info"/>
        <remap from="right/image_rect"       to="/carina/driver/stereo/$(arg camera_type)/right/raw"/>
        <remap from="right/camera_info"      to="/carina/driver/stereo/$(arg camera_type)/right/camera_info"/>
        <remap from="odom"                   to="$(arg odom_topic)"/>
        <remap from="imu"                    to="$(arg imu_topic)"/>

        <param name="frame_id"                    type="string" value="base_link"/>
        <param name="odom_frame_id"               type="string" value="odom"/>
        <param name="publish_tf"                  type="bool"   value="false"/>
        <param name="wait_for_transform_duration" type="double" value="0.2"/>
        <param name="wait_imu_to_init"            type="bool"   value="true"/>
        <param name="approx_sync"                 type="bool"   value="false"/>
        <param name="subscribe_rgbd"              type="bool"   value="false"/>
        <param name="guess_min_translation"       type="double" value="0"/>
        <param name="guess_min_rotation"          type="double" value="0"/>
        <param name="expected_update_rate"        type="double" value="0"/>
        <param name="max_update_rate"             type="double" value="0"/>
        <param name="keep_color"                  type="bool"   value="true"/>
    </node>

    <!--include file="$(find detectron2_ros)/launch/detectron2_ros.launch" pass_all_args="true">
        <arg name="image_topic" value="/carina/driver/stereo/$(arg camera_type)/left/raw"/>
        <arg name="camera_info_topic" value="/carina/driver/stereo/$(arg camera_type)/left/camera_info"/>
        <arg name="process_scale" default="1.0"/>
    </include-->

    <include file="$(find darknet_ros)/launch/yolo_v3.launch" pass_all_args="true"/>

    <include file="$(find mapless_mcl_ros)/launch/run.launch" pass_all_args="true"/>
    
    <!-- FUSION -->
    <node name="local_ekf_node" pkg="robot_localization" type="ekf_localization_node">
        <param name="publish_tf"            value=" true"/>
        <rosparam command="load"            file="$(find mapless_mcl_ros_demos)/config/ekf/local.yaml" />
        <remap from="/odometry/filtered"    to="/fusion/local" />
    </node>
    <node name="global_ekf_node" pkg="robot_localization" type="ekf_localization_node">
        <param name="publish_tf"            value="false"/>
        <rosparam command="load"            file="$(find mapless_mcl_ros_demos)/config/ekf/global.yaml" />
        <remap from="/odometry/filtered"    to="/fusion/global" />
    </node>
    <node name="groundtruth_ekf_node" pkg="robot_localization" type="ekf_localization_node" output="screen">
        <param name="publish_tf"            value="true"/>
        <rosparam command="load"            file="$(find mapless_mcl_ros_demos)/config/ekf/groundtruth.yaml" />
        <remap from="/odometry/filtered"    to="/fusion/groundtruth" />
    </node>


    <!-- GROUNDTRUTH AND COMPARISON -->
    <!-- ========================== -->
    <node name="results_report" pkg="mapless_mcl_ros_demos" type="groundtruth_comparison.py" output="screen">
        <param name="output_path" value="/home/braile/Workspace/phd/datasets/carina/results/results.csv"/>
    </node>

    <!-- VISUALIZATION -->
    <!-- =================== -->
    <node if="$(arg enable_viz)" name="rviz" type="rviz" pkg="rviz" args="-d $(find mapless_mcl_ros_demos)/rviz/carina.rviz"/>

</launch>